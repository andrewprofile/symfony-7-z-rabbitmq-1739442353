name: Symfony 7 with RabbitMQ

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
    - uses: actions/checkout@v4
    - name: Copy .env.test.local
      run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Create Database
      run: |
        mkdir -p data
        touch data/database.sqlite
    - name: Check the Symfony console
      run: |
        php bin/console -V
        php bin/console about
    - name: Check PSR12 code style (PHP_CodeSniffer)
      uses: chekalsky/phpcs-action@v1.2.0
      with:
        enable_warnings: true
        installed_paths: '${{ github.workspace }}/vendor/squizlabs/php_codesniffer'
        phpcs_bin_path: './vendor/bin/phpcs src --ignore="Migrations/"'
    - name: Analyse PHP Code (PHPStan)
      run: vendor/bin/phpstan analyse -l max -c phpstan.neon src
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
      run: vendor/bin/phpunit
